version: "3.7"
services:
  #mysql
  mysql:
    image:  mysql:latest
    volumes:
      - ./_data/configs/sql:/docker-entrypoint-initdb.d
      - ./_data/data/mysql:/var/lib/mysql
    ports:
      - "3306:3306"
    environment:
      - MYSQL_DATABASE=go-ssip
      - MYSQL_ROOT_PASSWORD=123456

  #Redis
  redis:
    image: redis:latest
    restart: always
    ports:
      - "6379:6379"
    environment:
      TZ: Asia/Shanghai
    volumes:
      - ./_data/data/redis:/data
      - ./_data/logs/redis:/logs
    command: redis-server --requirepass 123456

  #Consul
  consul:
    image: hashicorp/consul:latest
    command:   agent -server -bootstrap-expect=1 -ui -client=0.0.0.0
    volumes:
      - ./_consul/data:/consul/data
    ports:
      - "8500:8500"
      - "8300:8300"
      - "8301:8301"
      - "8302:8302"
      - "8600:8600/udp"

  #Collector
  otel-collector:
    image: otel/opentelemetry-collector-contrib:latest
    command: [ "--config=/etc/otel-collector-config.yaml","${OTELCOL_ARGS}"]
    volumes:
      - ./otel-collector-config.yaml:/etc/otel-collector-config.yaml
    ports:
      - "1888:1888"   # pprof extension
      - "8888"   # Prometheus' metrics exposed by the collector
      - "8889:8889"   # Prometheus exporter metrics
      - "13133:13133" # health_check extension
      - "55679" # zpages extension
      - "4317:4317"

    depends_on:
      - jaeger-all-in-one

  #Jaeger
  jaeger-all-in-one:
    container_name: jaeger-all-in-one
    image: jaegertracing/all-in-one:latest
    environment:
      - COLLETCTOR_OTLP_ENABLED=true
    ports:
      - "16686:16686"
      - "6831:6831"

  # VictoriaMetrics
  victoriametrics:
    container_name: victoriametrics
    image: victoriametrics/victoria-metrics
    ports:
      - "8428:8428"
      - "8089:8089"
      - "8089:8089/udp"
      - "2003:2003"
      - "2003:2003/udp"
      - "4242:4242"
    command:
      - '--storageDataPath=/storage'
      - '--graphiteListenAddr=:2003'
      - '--opentsdbListenAddr=:4242'
      - '--httpListenAddr=:8428'
      - '--influxListenAddr=:8089'
    restart: always

  # Grafana
  grafana:
    image: grafana/grafana:latest
    environment:
      - GF_AUTH_ANONYMOUS_ENABLED=true
      - GF_AUTH_ANONYMOUS_ORG_ROLE=Admin
      - GF_AUTH_DISABLE_LOGIN_FORM=true
    ports:
      - "3000:3000"

  # Mongodb
  mongodb:
    image: mongo:latest
    container_name: mongodb
    restart: always
    ports:
      - "27017:27017"
    volumes:
      - /_data/db:/data/db
    environment:
      - MONGO_INITDB_DATABASE=go-ssip
      - MONGO_INITDB_ROOT_USERNAME=liangweijian
      - MONGO_INITDB_ROOT_PASSWORD=123456


  # Zookeeper
  zookeeper:
    image: wurstmeister/zookeeper:latest
    container_name: "zookeeper"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
    ports:
      - "2181:2181"


  # Kafka
  kafka:
    image: wurstmeister/kafka:latest
    container_name: "kafka"
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: "zookeeper:2181"
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://127.0.0.1:9092
      ALLOW_PLAINTEXT_LISTENER: yes
    ports:
      - "9092:9092"

  # Prometheus
  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    restart: always
    volumes:
      - ./prometheus.yaml:/etc/prometheus/prometheus.yml
    ports:
      - "9090:9090"
    command: "--config.file=/etc/prometheus/prometheus.yml"







